# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-p': 'core:move-down'
#

'body':
  'alt-down': 'core:page-down'
  'alt-up': 'core:page-up'
  'ctrl-1': 'pane:show-item-1'
  'ctrl-2': 'pane:show-item-2'
  'ctrl-3': 'pane:show-item-3'
  'ctrl-4': 'pane:show-item-4'
  'ctrl-5': 'pane:show-item-5'
  'ctrl-6': 'pane:show-item-6'
  'ctrl-7': 'pane:show-item-7'
  'ctrl-8': 'pane:show-item-8'
  'ctrl-9': 'pane:show-item-9'

'atom-workspace atom-text-editor:not([mini])':
  'ctrl-[': 'editor:fold-current-row'
  'ctrl-]': 'editor:unfold-current-row'
  'ctrl-backspace': 'editor:delete-line'

# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
